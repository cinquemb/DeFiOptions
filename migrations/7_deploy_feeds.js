const feed = artifacts.require("ChainlinkFeed");
const scryAgg = artifacts.require("ScryAggregatorV1");
const pythAgg = artifacts.require("PythAggregatorV1");

///https://docs.chain.link/data-feeds/price-feeds/addresses?network=avalanche

/*

MUMBAI CHAINLINK AGGV3's
BTC / USD   0x007A22900a3B98143368Bd5906f8E17e9867581b
ETH / USD   0x0715A7794a1dc8e42615F059dD6e406A6594651A
MATIC / USD   0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada

*/

/*

FUJI CHIANLINKE AGGV3's

AVAX / USD 0x5498BB86BC934c8D34FDA08E81D444153d0D06aD
BTC / USD 0x31CF013A08c6Ac228C94551d535d5BAfE19c602a
ETH / USD 0x86d67c3D38D2bCeE722E601025C25a575021c6EA
MATIC / USD 0xB0924e98CAFC880ed81F6A4cA63FD61006D1f8A0

FakeDAI is at: 0x3f726b8b382f7EEaeA106D37AdA822F2973cB2f4
FakeUSDC is at: 0x4D9790A4097bD1B46944B3019a1b11c935AcDa34
FakeBTC is at: 0xC969024b804Bf0944610277Bb13eA820596eEdE8
FakeETH is at: 0x7f817f49d1Bc9A76E4581845B2FDa6De28ea3dB2
FakeMATIC is at: 0xDd2451C438e1711f9b5015a8DbFA727382A0B08F
FakeAVAX is at: 0xf0cAe108823b80F37cfAA5E8aEc8190D66ED0d62

*/

/*

CANTO TESTNET SCRY ORACLE
:0xE565f05422481345b5Fad564DD9Ab7B0cE3Ec017

const BTCUSDAgg = await deployer.deploy(
  scryAgg, 
  "0xE565f05422481345b5Fad564DD9Ab7B0cE3Ec017",
  2
);
console.log("BTCUSDAgg is at: "+ BTCUSDAgg.address);
const ETHUSDAgg = await deployer.deploy(
  scryAgg,
  "0xE565f05422481345b5Fad564DD9Ab7B0cE3Ec017",
  1`
);
console.log("ETHUSDAgg is at: "+ ETHUSDAgg.address);
const CANTOUSDAgg = await deployer.deploy(
  scryAgg,
  "0xE565f05422481345b5Fad564DD9Ab7B0cE3Ec017",
  0
);
console.log("CANTOUSDAgg is at: "+ CANTOUSDAgg.address);

*/

const oracleAdminAddr = "0xe977757dA5fd73Ca3D2bA6b7B544bdF42bb2CBf6";

module.exports = async function(deployer) {
  //    pyth_asset_ids = [{"BTC": "0xf9c0172ba10dfa4d19088d94f5bf61d3b54d5bd7483a322a982e1373ee8ea31b"}, {"ETH": "0xca80ba6dc32e08d06f1aa886011eed1d77c77be9eb761cc10d72b7d0a2fd57a6"}, {"MATIC": "0xd2c2c1f2bba8e0964f9589e060c2ee97f5e19057267ac3284caef3bd50bd2cb5"}, {"AVAX": "0xd7566a3ba7f7286ed54f4ae7e983f4420ae0b1e0f3892e11f9c4ab107bbad7b9"}]

    //time truffle migrate --reset -f 7 --to 7 --skip-dry-run --network=mumbai >> mumbai_deployment_1.txt

    let BTCUSDAgg = await deployer.deploy(
      pythAgg, 
      "0xff1a0f4744e8582DF1aE09D5611b887B6a12925C",
      "0xf9c0172ba10dfa4d19088d94f5bf61d3b54d5bd7483a322a982e1373ee8ea31b"
    );
     setTimeout(function(){},10000);
     BTCUSDAgg = {address: pythAgg.address};

    console.log("pythBTCUSDAgg is at: "+ BTCUSDAgg.address);
    let ETHUSDAgg = await deployer.deploy(
      pythAgg,
      "0xff1a0f4744e8582DF1aE09D5611b887B6a12925C",
      "0xca80ba6dc32e08d06f1aa886011eed1d77c77be9eb761cc10d72b7d0a2fd57a6"
    );
     setTimeout(function(){},10000);
     ETHUSDAgg = {address: pythAgg.address};
    console.log("pythETHUSDAgg is at: "+ ETHUSDAgg.address);
    let MATICUSDAgg = await deployer.deploy(
      pythAgg, 
      "0xff1a0f4744e8582DF1aE09D5611b887B6a12925C",
      "0xd2c2c1f2bba8e0964f9589e060c2ee97f5e19057267ac3284caef3bd50bd2cb5"
    );
     setTimeout(function(){},10000);
     MATICUSDAgg = {address: pythAgg.address};
    console.log("pythMATICUSDAgg is at: "+ MATICUSDAgg.address);
    let AVAXUSDAgg = await deployer.deploy(
      pythAgg,
      "0xff1a0f4744e8582DF1aE09D5611b887B6a12925C",
      "0xd7566a3ba7f7286ed54f4ae7e983f4420ae0b1e0f3892e11f9c4ab107bbad7b9"
    );
     AVAXUSDAgg = {address: pythAgg.address};
     setTimeout(function(){},10000);
    console.log("pythAVAXUSDAgg is at: "+ AVAXUSDAgg.address);

       
    const btc = await deployer.deploy(
     feed, 
     "BTC/USD",
     oracleAdminAddr, //privledgedPublisherKeeper, may be address(0)
     "0xC969024b804Bf0944610277Bb13eA820596eEdE8", //underlying addrsss on the chain
     BTCUSDAgg.address,//eth/usd feed mock or chainlink agg
     "0x70e7E067706655abA62F9e4Df465979c2Ab9f496", //time provider address
     3 * 60 * 60,
     [1665633600, 1665720000, 1665806400, 1665892800, 1665979200, 1666065600, 1666152000, 1666238400, 1666324800, 1666411200, 1666497600, 1666584000, 1666670400, 1666756800, 1666843200, 1666929600, 1667016000, 1667102400, 1667188800, 1667275200, 1667361600, 1667448000, 1667534400, 1667620800, 1667707200, 1667797200, 1667883600, 1667970000, 1668056400, 1668142800, 1668229200, 1668315600, 1668402000, 1668488400, 1668574800, 1668661200, 1668747600, 1668834000, 1668920400, 1669006800, 1669093200, 1669179600, 1669266000, 1669352400, 1669438800, 1669525200, 1669611600, 1669698000, 1669784400, 1669870800, 1669957200, 1670043600, 1670130000, 1670216400, 1670302800, 1670389200, 1670475600, 1670562000, 1670648400, 1670734800, 1670821200, 1670907600, 1670994000, 1671080400, 1671166800, 1671253200, 1671339600, 1671426000, 1671512400, 1671598800, 1671685200, 1671771600, 1671858000, 1671944400, 1672030800, 1672117200, 1672203600, 1672290000, 1672376400, 1672462800, 1672549200, 1672635600, 1672722000, 1672808400, 1672894800, 1672981200, 1673067600, 1673154000, 1673240400, 1673326800, 1673413200, 1673499600, 1673586000, 1673672400, 1673758800, 1673845200, 1673931600, 1674018000, 1674104400, 1674190800],
     [1915696679700, 1938253320300, 1918543750000, 1906891406300, 1926856250000, 1955046679700, 1933502734399, 1913808593800, 1905320312500, 1917238085900, 1920773437500, 1956776953100, 1934496484399, 2009223632800, 2077280273400, 2028795703100, 2059510351600, 2081798242200, 2063369531300, 2049489843800, 2048295898400, 2016268945300, 2020876953100, 2114483203100, 2128505664100, 2092462109399, 2060067187500, 1854376171899, 1588315820300, 1758325195300, 1703687500000, 1679972265600, 1635202832000, 1661748437500, 1688434179700, 1667042578100, 1668791210900, 1669622070300, 1671291992200, 1629122363300, 1578230078100, 1619558886700, 1661163671899, 1660226953100, 1652157617200, 1646388281300, 1644022265600, 1621763964800, 1644547656300, 1716800195300, 1696868359399, 1709009765600, 1690816992200, 1712889453100, 1697523828100, 1708950585900, 1684734960900, 1723214843800, 1713422070300, 1712971093800, 1710250000000, 1720644140600, 1778206640600, 1781364453100, 1736454687500, 1664698242200, 1679560937500, 1675904101600, 1644178710900, 1690452734399, 1681838085900, 1682964453100, 1679697656300, 1684750585900, 1684225000000, 1691929101600, 1671640039100, 1655232226600, 1664133007800, 1660367382800, 1654791406300, 1662550976600, 1668884765600, 1668020507800, 1686347265600, 1683647265600, 1695211718800, 1695414648400, 1709399218800, 1719294921899, 1744635937500, 1811759375000, 1886890625000, 1991053710900, 2097748437500, 2088222460900, 2117583398400, 2116105078100, 2068674609399, 2107393945300]
   );
   console.log("btc pyth feed is at: "+ btc.address);

     setTimeout(function(){},10000);

   const eth = await deployer.deploy(
     feed, 
     "ETH/USD",
     oracleAdminAddr, //privledgedPublisherKeeper, may be address(0)
     "0x7f817f49d1Bc9A76E4581845B2FDa6De28ea3dB2",
     ETHUSDAgg.address,
     "0x70e7E067706655abA62F9e4Df465979c2Ab9f496",
     3 * 60 * 60,
     [1669698000, 1669784400, 1669870800, 1669957200, 1670043600, 1670130000, 1670216400, 1670302800, 1670389200, 1670475600, 1670562000, 1670648400, 1670734800, 1670821200, 1670907600, 1670994000, 1671080400, 1671166800, 1671253200, 1671339600, 1671426000, 1671512400, 1671598800, 1671685200, 1671771600, 1671858000, 1671944400, 1672030800, 1672117200, 1672203600, 1672290000, 1672376400, 1672462800, 1672549200, 1672635600, 1672722000, 1672808400, 1672894800, 1672981200, 1673067600, 1673154000, 1673240400, 1673326800, 1673413200, 1673499600, 1673586000, 1673672400, 1673758800, 1673845200, 1673931600, 1674018000, 1674104400, 1674190800, 1674277200, 1674363600, 1674450000, 1674536400, 1674622800, 1674709200, 1674795600, 1674882000, 1674968400, 1675054800, 1675141200, 1675227600, 1675314000, 1675400400, 1675486800, 1675573200, 1675659600, 1675746000, 1675832400, 1675918800, 1676005200, 1676091600, 1676178000, 1676264400, 1676350800, 1676437200, 1676523600, 1676610000, 1676696400, 1676782800, 1676869200, 1676955600, 1677042000, 1677128400, 1677214800, 1677301200, 1677387600, 1677474000, 1677560400, 1677646800, 1677733200, 1677819600, 1677906000, 1677992400, 1678078800, 1678165200, 1678338000],

   );
   console.log("eth pyth feed is at: "+ eth.address);
    setTimeout(function(){},10000);


   const matic = await deployer.deploy(
     feed, 
     "MATIC/USD",
     oracleAdminAddr, //privledgedPublisherKeeper, may be address(0)
     "0xDd2451C438e1711f9b5015a8DbFA727382A0B08F",
     MATICUSDAgg.address,
     "0x70e7E067706655abA62F9e4Df465979c2Ab9f496",
     3 * 60 * 60,
     [1669698000, 1669784400, 1669870800, 1669957200, 1670043600, 1670130000, 1670216400, 1670302800, 1670389200, 1670475600, 1670562000, 1670648400, 1670734800, 1670821200, 1670907600, 1670994000, 1671080400, 1671166800, 1671253200, 1671339600, 1671426000, 1671512400, 1671598800, 1671685200, 1671771600, 1671858000, 1671944400, 1672030800, 1672117200, 1672203600, 1672290000, 1672376400, 1672462800, 1672549200, 1672635600, 1672722000, 1672808400, 1672894800, 1672981200, 1673067600, 1673154000, 1673240400, 1673326800, 1673413200, 1673499600, 1673586000, 1673672400, 1673758800, 1673845200, 1673931600, 1674018000, 1674104400, 1674190800, 1674277200, 1674363600, 1674450000, 1674536400, 1674622800, 1674709200, 1674795600, 1674882000, 1674968400, 1675054800, 1675141200, 1675227600, 1675314000, 1675400400, 1675486800, 1675573200, 1675659600, 1675746000, 1675832400, 1675918800, 1676005200, 1676091600, 1676178000, 1676264400, 1676350800, 1676437200, 1676523600, 1676610000, 1676696400, 1676782800, 1676869200, 1676955600, 1677042000, 1677128400, 1677214800, 1677301200, 1677387600, 1677474000, 1677560400, 1677646800, 1677733200, 1677819600, 1677906000, 1677992400, 1678078800, 1678165200, 1678338000],
    [82241500, 83900300, 93641200, 90839300, 94667900, 90310800, 92193100, 91126400, 91744700, 89630100, 92781500, 90954600, 90828300, 89329500, 91055800, 92353000, 90334000, 87797000, 79579300, 81613300, 81404000, 77289900, 80262000, 79308100, 79572700, 79876300, 79600300, 79512800, 81353900, 80604100, 78281100, 77735700, 76060500, 75850200, 75998800, 78092700, 78004500, 80633500, 78846300, 79922500, 80667400, 84028200, 84399200, 85843900, 89772500, 91623900, 93100400, 99973700, 98347600, 101964900, 99590500, 94003600, 95292300, 102621999, 99009700, 99410800, 99482900, 95595200, 99307900, 112307200, 115824800, 114436400, 117786200, 108733200, 111108500, 119462600, 118032800, 124445199, 125109500, 120436700, 119035700, 126923400, 130424999, 122848000, 123042400, 125125200, 123833400, 118645399, 125868699, 132980000, 137166500, 152557900, 148676800, 147960900, 147442800, 138511300, 139678200, 135459900, 126601199, 124866000, 128128400, 123553700, 119524900, 124827700, 122500400, 116776300, 112669899, 113724900, 113171899, 105430800]

   );
   console.log("matic pyth feed is at: "+ matic.address);
    setTimeout(function(){},10000);

  const avax = await deployer.deploy(
     feed, 
     "AVAX/USD",
     oracleAdminAddr, //privledgedPublisherKeeper, may be address(0)
     "0xf0cAe108823b80F37cfAA5E8aEc8190D66ED0d62",
     AVAXUSDAgg.address,
     "0x70e7E067706655abA62F9e4Df465979c2Ab9f496",
     3 * 60 * 60,
     [1669698000, 1669784400, 1669870800, 1669957200, 1670043600, 1670130000, 1670216400, 1670302800, 1670389200, 1670475600, 1670562000, 1670648400, 1670734800, 1670821200, 1670907600, 1670994000, 1671080400, 1671166800, 1671253200, 1671339600, 1671426000, 1671512400, 1671598800, 1671685200, 1671771600, 1671858000, 1671944400, 1672030800, 1672117200, 1672203600, 1672290000, 1672376400, 1672462800, 1672549200, 1672635600, 1672722000, 1672808400, 1672894800, 1672981200, 1673067600, 1673154000, 1673240400, 1673326800, 1673413200, 1673499600, 1673586000, 1673672400, 1673758800, 1673845200, 1673931600, 1674018000, 1674104400, 1674190800, 1674277200, 1674363600, 1674450000, 1674536400, 1674622800, 1674709200, 1674795600, 1674882000, 1674968400, 1675054800, 1675141200, 1675227600, 1675314000, 1675400400, 1675486800, 1675573200, 1675659600, 1675746000, 1675832400, 1675918800, 1676005200, 1676091600, 1676178000, 1676264400, 1676350800, 1676437200, 1676523600, 1676610000, 1676696400, 1676782800, 1676869200, 1676955600, 1677042000, 1677128400, 1677214800, 1677301200, 1677387600, 1677474000, 1677560400, 1677646800, 1677733200, 1677819600, 1677906000, 1677992400, 1678078800, 1678165200, 1678338000],
     [1245917700, 1247337900, 1315643200, 1288882900, 1358722200, 1342719200, 1392453200, 1360281800, 1366579800, 1326592900, 1340648200, 1345339100, 1348069500, 1299382900, 1299267700, 1373113400, 1372599200, 1317133400, 1184592800, 1196294000, 1192561800, 1138584500, 1196539300, 1169793500, 1184354300, 1178160600, 1168012400, 1168433000, 1172073100, 1164621400, 1120308700, 1099242600, 1087063300, 1090373400, 1086603400, 1115368400, 1138394200, 1207743300, 1174231300, 1178193300, 1174146300, 1206956800, 1220708100, 1272966300, 1584968500, 1545751700, 1596125100, 1695948400, 1679619800, 1674263800, 1712907999, 1580941200, 1619332500, 1752294699, 1689125400, 1736220700, 1799537300, 1702123500, 1779720700, 1810741600, 2125161599, 2060445199, 2107667700, 1973755500, 1984294900, 2095808800, 2117309200, 2136261400, 2102543400, 2010722000, 1958088900, 2084448099, 2008573900, 1787581399, 1780218899, 1802776700, 1777037000, 1761852300, 1814570000, 1992382599, 1861043400, 1947703000, 1957203100, 1980809000, 2081547000, 2094215800, 2031671900, 1970188700, 1837303199, 1795693000, 1844245099, 1793850099, 1708233600, 1776155100, 1744780000, 1665411900, 1612207600, 1615630100, 1652454399, 1517594100]
   );
   console.log("avax pyth feed is at: "+ avax.address);

};